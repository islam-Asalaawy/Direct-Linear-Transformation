Samples for 2D and 3D Direct Linear Transformation (DLT)

Couldn't easily find library for DLT (Abdel-Aziz & Karara 1971 Proc. Symposium on Close-Range Photogrammetry,
Urbana, Illinois, p. 1-18.) for motion capture by googling and decided to write my own code. Took the required math predominantly from http://kwon3d.com/theory/dlt/dlt.html and used "JAMA : A Java Matrix Package" for matrix algebra (http://math.nist.gov/javanumerics/jama/). Didn't quite get all that I needed to understand from kwon3d.com and had to do some figuring out myself. Consequently, only the basic DLT is implemented (i.e. coefficients 1 - 11 for the 3D) and lens distortions are not accounted for (Adding camera calibration would probably sort that out). I made a new google search just recently and found http://yunus.hacettepe.edu.tr/~saritan/biomechanics/dlt/, which seems to have all of the equations spelled out. I might take a look at 16 coefficient DLT in the future to account for lens distortion as well.

In short, 3D motion capture with DLT comprises two steps:
1) Plane(2D)/volume(3D) calibration using a known calibration object and digitizing the control points from each camera. The calibration object and digitized points are then used to obtain the DLT coefficients for each camera.  
2) Digitizing unknown point(s) within the calibrated plane (or volume in 3D analysis, points from a minimum of two cameras) and applying the DLT to obtain the global coordinates.
